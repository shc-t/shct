#include "EspMQTTClient.h"
#include "PMS.h"
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#if defined(ESP32)
  #define BUTTON_A 15
  #define BUTTON_B 32
  #define BUTTON_C 14
  #define WIRE Wire
#else // 32u4, M0, M4, nrf52840 and 328p
  #define BUTTON_A  9
  #define BUTTON_B  6
  #define BUTTON_C  5
  #define WIRE Wire
#endif

Adafruit_SSD1306 display = Adafruit_SSD1306(128, 32, &WIRE);

EspMQTTClient client(
  "Velop",
  "1111111a",
  "193.169.199.14",  // MQTT Broker server ip
  "msqt001",   // Can be omitted if not needed
  "msqt@001",   // Can be omitted if not needed
  "esp32",     // Client name that uniquely identify your device
  1883              // The MQTT port, default to 1883. this line can be omitted
);

PMS pms(Serial);
PMS::DATA data;
char aqdt[100];
char pm25[10];

void setup()
{
  Serial.begin(9600);
  client.enableDebuggingMessages(); // Enable debugging messages sent to serial output
  client.enableHTTPWebUpdater(); // Enable the web updater. User and password default to values of MQTTUsername and MQTTPassword. These can be overridded with enableHTTPWebUpdater("user", "password").
  client.enableLastWillMessage("TestClient/lastwill", "I am going offline");  // You can activate the retain flag by setting the third parameter to true
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // Address 0x3C for 128x32
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
  pinMode(BUTTON_A, INPUT_PULLUP);
  pinMode(BUTTON_B, INPUT_PULLUP);
  pinMode(BUTTON_C, INPUT_PULLUP);
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0,0);

}

void onConnectionEstablished()
{  
}

void loop()
{
  
  if (pms.read(data))
  {  
    sprintf(aqdt,"{\"pm2p5\":%d,\"pm1p0\":%d,\"pm10\":%d}",data.PM_AE_UG_2_5,data.PM_AE_UG_1_0,data.PM_AE_UG_10_0);
    client.publish("AQI", aqdt);
  }

  display.setCursor(0,0);
  display.print("pm2.5:");
  sprintf(pm25,"\%d",data.PM_AE_UG_2_5);
  display.print(pm25);  
  display.display();  
  display.clearDisplay();
  display.display();

  client.loop();
}
